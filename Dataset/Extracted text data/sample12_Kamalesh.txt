
Name: Kamalesh.s
Regn No 2127200801040
Branch E Sec: IT A
Subcode & Subname: 18305 Database systems
CAT-3
Part b
6
(b)
when data in tables are stared across different sites than is a high chance of
data conductory to occul Data redundary occurs when The same piece of data
exists in multiple places, wheres dila inconsistency is when same data exists in diff.
formats in multiple tables. Data redundancy can cause datn inconsistency which can
provide a company with unediable only or meaningless information.
of data consistency is not followed, then three is a high chance of data
colluption due to result of overwriting & overreading the same data agcin won't & work again.
If file gets coucupt, then the quaries to retrieve the data
the
people. inconsistancy also increase the database size & the comploxity data stand of
database Data This is due to the repetition of the same across
multiple websites again E again.
Data inconsistency also will end up increasing the cost, as move cost is would also
be required for a bigger database To maintain such a large database
a tough task.
To avoid these problems & maintain data consistency ,we can follow the following
methods:
(i) Masta data:-
It is a single some of common business data that is shared across several
applications a Systems. Although master data does not reduce to accurences of
date redundancy, it allows the company to work around & accept a certain level
of data redundancy This is because the us of master data ensmes that
in the event a data piece changes, an organisation only needs to update
one piece of data. In this case, redundant data is consistantly updated &
provides the same info.
(ii) Database normalization :-
Database normalization is the process of efficiently organising data in a
database so that redundant data 3 oliminated. This process can ensure that all
of a company's data looks & leads similarly across all records. By implementing
data normalization, an organisation standardizes data fields such as customer
name, addresses, & phone numbers.
Namalizing data involves organising the columns & tables of a database
to
make sall their dependencies are enforced connectly. The "normal form" ufes
to N sit of rules 5 namalizing data, & a database is known as 'normaliss'
it its fro of delete, update E insul anomalities.
Requirements for input managing data consistency
high speed, low dda compaison.
Support for retrogenoons databases.
Capability for handling large data volumes.
Data security
Easy to as, understand, configue, deploy & diagnose
low impact on hardwore & network resources.
Challenges in maintaing data consistency:-
Migration ellows:-
Diffant kinds of migration tools are employed to facilitate the initial load of
the furget databases before replication can begin. Differences in config for headling
data by the migration tools & replication products can result in data discrepance
Left & shift workload to cloud:-
Since h world is moving towards cloud, the left in shift of database walload
from on -pumises to cloud in need of today's IT would.
Differences in Source & Enget:-
Differences in source & targt database coofig, for example diff. encodies,
locales, endiannes or database versions can cand subtle discrepancies to happen
during migration & replication,
Instantanious Enous:-
Before migration on replication are can begin, the target database will need to be
instantiated with const schema & constroint Failure to do so will result in
source in turget being out of Sync.
Part -C
8)
b)
Dishibuted lock manager can he used for this scenaris. In this approach,
furctionality of locking is implemented by lock managers at each site.
Juck managers control access to local data items.
Tacking is performed separately or each site accessed by transaction
Every replica must be locked & updaled
But special protocols may be used for replicas
Deadlock handling
Consider the following 2 transactions & history with item X & transaction
T, at site / , & item Y & transaction T2 at site 2 :
wate (x)
write (x)
T,
T2
writely)
write(y)
X-loch onx
write (x)
X-loch or Y
write (y)
wait for X-loch on
X
wait fax-lock
on y
Result: Deadlock which can't be detected locally at inter site.
Deadlock detection
In the centualised deadlock detection approach, global wait-for graph is
constructed & maintained in a single sio:
Real glaph: Real, but a known state of system.
Constructed graph: Approximation generated by controller during executis of its
algorithm.
The global wait - for graph can be constructed when:
a now salge is insected in as removed from an of local wait for
graphs. a no. of changes have occured in a local wait for graph.
the coordindo needs to invoke cyal detector.
If coundinates firds a cycle, it select a vidim & notifies all site. the sites
roll bach the victim has action.
Local & global wait for graphs
T1
T2
T2
ky
Local
13
T3
This big, depicts a system of
Ts
sit S2
2 sites, each maintaining its loud
Sit S,
wait -for graph. Transactions 32
73 appear in both graphs, indicating
that thersactions have requested items
T2
Tu
at both sites. when a
Ti
good transaction Ti on site S,
a resource in SIG
T5
T3
S2 ,it sends a NOV mag to site
S2 If resource is held by transation
Global
Ti , System inserts an edge Ti-Ti
in local wait -for gaph of
wait - for graph for false cycles
site S2.
Initial State:
Global
T,
T1
In centralised deatlock detection
approach, the system constructs &
T2
T3
maintains a global wait -for graph in
S1
S2
a single sit: the deadlock- detection
coordinator. since There is communication
delay in the system, we must distinguish
TI
b/w 2 types of wait - for graphs.
T2
T3
coodin aton
False cycles:-
Suppers that starting from the state shown above.
1) T2 releases resource at S1.
resulting in a messages remove T, 7 message from Transaction manage at
S1 to coodinates
2) T2 request a resource held by 3 at sib S2
resulting in a message insert 72 73 from E to coordinates.
Suppose furtha that isat message deaches before delete message.
this can happen due to network delays
The coordination would then find a felse cycle
T,
7
T3
7,
The false cycle above never existed in reality
False cycles cannot occal it 2 phase working is used
Distributed downllocks.
Unnecessary rollbacks may result
when deadlock has indeal occured & a victim has been picked, &
meanwhile one of transactions was abouted for reasons emilated to the
diadlock.
Due to felse cycles in global wait - for graph, housling, likelihood of
fulse cycle is low
In distributed deadloch detection approach, sites exchange wait -for info &
check for Leadlocks
Expensive & not used in practice.
va)
Terrating is, simply put, a file -shaling technology ueses, peas in this case,
connet En share the files online. when you are using touents you don't download
files from a single website / source Files circulate around the plecs who sad
them. It means that you download staff from one direct sound but you also
download chunks from other usas of same toment. That enables a smooth
transfer That's hand to trace.
lens are users who are involved in the sharing process through tourant P2P
network. You are a per as long as you keep sharing file on the given
network.
seeders are was who are downloading but also uploading the file for other
users to downlad. when you download something through towen, you download
certain amats of data but you also upload a bit. That upload nons that
other were win get chunk they need when you upload it.
Indians and websites that work as search engines for files & content
that can to downloaded through tarents.
Fault is used to ensure the working of tenant flw gay
lather of tomant due to access from multiple goographic lotations.
Tarrent protocol enables decentralization of its resources by making use of
pler- to par adwith
A small tonent file is wated to represent a fib a 0 fold to be
Shard
Users can download the required files using a unique magnet linkassoilable
to lack file or terror
To loan the internet location of poess, we use distributed hash tables. The
Technology to Insure fruit tolerance is Fault- tolarant services using replicated
State machines.
Fault- Tolerant savius using applicated state machines
key requirement: makes the tawant service fault tolerant Eg: lock manager, Kay-value
storage system.
state
machines
are a powerful approach to certain such services
A state machine
has a stood state, & receives inputs
Makes state transistions on each input & may output some results
transitions & output must be detuministic.
A replicated state machine is a state machine that is replicated on multiple
nodes
All uplicas must get exactly same inputs.
Even if same of nodes fail, State & output can to obtained from other
nodes
Replicated State Machine
client
YET
x 3
consinous
a
3
consensus
I 3
consensus
Module
Y 7
Modulo
y 7
Module
7
y
2
3
2 3
23
Lug
log
Log
at 212621x631464
YE?
XE-3
464/707
x+3
yealities
follower
to flows
leader
Leader declares log declared cumitled often it is replicated at a majority
of nodes Updale of state machine at each Mplica happens only after log
record has han committed.
Uses of Replicated state machines
Inputs can specify operations with paramotes but operations mns is determination
Result of operation can to son't from any replies
gets remeted only what log record is committed in oplicated log.
usually sent from londn, which knows which part of log of
committed.
Eg: Fault folerant kay - value store:-
State: 1604 value storage state
operations: get () & put()
operations executed when log is in committed state.
Part - A
3)
Advantages of storing multiple relations in a single file:
Complex structures can be implemented through the DBMS ,Thus incouring
performance.
organise data & programs on storage media in a human friendly way.
Editing data is easier
Disadvantages:-
Data bachup: If the single file is conapted, all data is lost, So no
data bachup.
Increases Size & complexity of DBMS.
Data inconsistency
4)
1)
For the two disk minored case, we assume A disk & B disk. In order to
loss data. A: & B need to be faild at same time If A is already failed E
within 100 000 his B disk will fail, then data is lost. The other case is B
is already failed & within 100 000 his A will fail & then data will be lost.
for this law, A disk is faild for works leay 100 000 his. so in
order to make B to fail, it will need 100000"2 / 100 his Because the
other case, The time is reduced to 100000 (2 $100)
5)
Map database management systems are software program designed to efficially
Stere E recall special information They an widely used is localisation & nevigation,
expecially in automative applications. A map detabas enables the rapid induing
& workp of a large amant of geographic data
4)
MySQL enables restrictions to be placed or was of previous passwords.
MySul has password. use policy that allows it, to establish
passward. use policy globally, us passwordshistory & password-nows.in
system variables.
2)
Database indexing Hash tables may also is used as disk. based data
Structures E database indices although B-trees are more popular in
these applications. In multi-mode database systems, hash tables as (canonly
used to distribute rows amongst nods, reducing network traffic for hash
joins.